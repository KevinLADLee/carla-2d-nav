# obstacle_range: 30.0
# raytrace_range: 30.0

footprint: [[-0.205, -0.155], [-0.205, 0.155], [0.077, 0.155], [0.077, -0.155]]
#robot_radius: 0.17

# inflation_radius: 0.5
# cost_scaling_factor: 2.0

map_type: voxel
origin_z: 0.0
z_resolution: 0.1
z_voxels: 4
publish_voxel_map: true
transform_tolerance: 0.1
meter_scoring: true

plugins:
    # - {name: obstacles_layer, type: "costmap_2d::ObstacleLayer"}
- {name: static_layer, type: "costmap_2d::StaticLayer"}    
- {name: voxel_layer, type: "costmap_2d::VoxelLayer"}
- {name: inflater_layer, type: "costmap_2d::InflationLayer"}
    
static_layer:
    enabled: true
    static_map: true

voxel_layer:
    enabled: true
    observation_sources: point_cloud
    point_cloud: {sensor_frame: ego_vehicle/lidar/lidar1, data_type: PointCloud2, topic: /carla/ego_vehicle/lidar/lidar1/point_cloud, marking: true, clearing: false, min_obstacle_height: 0.3, max_obstacle_height: 5, obstacle_range: 15, raytrace_range: 20, inf_is_valid: true}

      # scan: {sensor_frame: velodyne, data_type: PointCloud2, topic: /velodyne_points/for_costmap, marking: true, clearing: true, min_obstacle_height: 0.025, max_obstacle_height: 0.4, obstacle_range: 3.0, raytrace_range: 20.0, expected_update_rate: 5, inf_is_valid: true}
    
inflater_layer:
     # ADDED:
    enabled: true
    inflation_radius: 0.25
    cost_scaling_factor: 2.0


# observation_sources: point_cloud
# point_cloud: {sensor_frame: ego_vehicle/lidar/lidar1, data_type: PointCloud2, topic: /carla/ego_vehicle/lidar/lidar1/point_cloud, marking: true, clearing: false, min_obstacle_height: 0.5, max_obstacle_height: 5, obstacle_range: 15, raytrace_range: 20}
